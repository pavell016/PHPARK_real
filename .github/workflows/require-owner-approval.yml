name: Require Owner Approval

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  require-approval:
    runs-on: ubuntu-latest
    env:
      REQUIRED_REVIEWERS: "oriolcortes"   # space-separated list of required reviewers
      # Optional: only enforce when these paths are changed (space-separated list)
      PROTECTED_PATHS: ".github/workflows/**"
    steps:
      - uses: actions/checkout@v4

      - name: Detect changed files
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            protected:
              - ${{ env.PROTECTED_PATHS }}

      - name: Check reviews from required reviewers
        if: steps.changes.outputs.protected == 'true'
        id: reviewcheck
        uses: actions/github-script@v7
        with:
          script: |
            const required = process.env.REQUIRED_REVIEWERS.split(/\s+/).filter(Boolean).map(s => s.replace(/^@/,''));
            const {owner, repo} = context.repo;
            const pr = context.payload.pull_request.number;

            // Get all reviews and keep the latest state per user
            const reviews = await github.paginate(github.rest.pulls.listReviews, {owner, repo, pull_number: pr});
            const latest = new Map();
            for (const r of reviews) latest.set(r.user.login, r.state);

            // Check approval status for each required reviewer
            const missing = [];
            for (const user of required) {
              const state = latest.get(user);
              if (state !== 'APPROVED') missing.push(user);
            }

            core.setOutput('missing', missing.join(' '));
            if (missing.length) {
              core.setFailed(`Missing required approval from: ${missing.join(', ')}`);
            } else {
              core.notice('All required reviewers have approved.');
            }

      - name: Skip (no protected paths)
        if: steps.changes.outputs.protected != 'true'
        run: echo "No protected paths changed; skipping approval requirement."
